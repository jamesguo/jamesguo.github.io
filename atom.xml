<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[James Guo Blog]]></title>
  <link href="http://jamesguo.github.io/atom.xml" rel="self"/>
  <link href="http://jamesguo.github.io/"/>
  <updated>2015-07-24T17:09:26+08:00</updated>
  <id>http://jamesguo.github.io/</id>
  <author>
    <name><![CDATA[James Guo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android截屏]]></title>
    <link href="http://jamesguo.github.io/blog/2015/07/24/androidjie-ping/"/>
    <updated>2015-07-24T16:58:37+08:00</updated>
    <id>http://jamesguo.github.io/blog/2015/07/24/androidjie-ping</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android下SO相关信息查看]]></title>
    <link href="http://jamesguo.github.io/blog/2015/07/08/androidxia-soxiang-guan-xin-xi-cha-kan/"/>
    <updated>2015-07-08T09:43:34+08:00</updated>
    <id>http://jamesguo.github.io/blog/2015/07/08/androidxia-soxiang-guan-xin-xi-cha-kan</id>
    <content type="html"><![CDATA[<p>arm-linux-androideabi-objdump /Users/james/Work/workspace/jniproject/android_hook/hook_so/libs/armeabi/libhook.so -S -j.got</p>

<p>/Users/james/Work/workspace/jniproject/android_hook/hook_so/libs/armeabi/libhook.so:     file format elf32-littlearm</p>

<p>Disassembly of section .got:</p>

<p>00003fb8 &lt;.got>:
    3fb8:   000017d4    ldrdeq  r1, [r0], -r4
    3fbc:   000017dc    ldrdeq  r1, [r0], -ip
    3fc0:   000017e4    andeq   r1, r0, r4, ror #15
    3fc4:   00000000    andeq   r0, r0, r0
    3fc8:   000022f4    strdeq  r2, [r0], -r4
    3fcc:   000021e4    andeq   r2, r0, r4, ror #3
    &hellip;
    3fe0:   00000b98    muleq   r0, r8, fp
    3fe4:   00000b98    muleq   r0, r8, fp
    3fe8:   00000b98    muleq   r0, r8, fp
    3fec:   00000b98    muleq   r0, r8, fp
    3ff0:   00000b98    muleq   r0, r8, fp
    3ff4:   00000b98    muleq   r0, r8, fp
    3ff8:   00000b98    muleq   r0, r8, fp
    3ffc:   00000b98    muleq   r0, r8, fp</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android MakeFile整理]]></title>
    <link href="http://jamesguo.github.io/blog/2015/07/04/android-makefilezheng-li/"/>
    <updated>2015-07-04T22:09:58+08:00</updated>
    <id>http://jamesguo.github.io/blog/2015/07/04/android-makefilezheng-li</id>
    <content type="html"><![CDATA[<h5>LOCAL_PATH配置</h5>

<p>  LOCAL_PATH := $(call my-dir)</p>

<h5>include配置</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>include $(CLEAR_VARS)
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>include $(BUILD_SHARED_LIBRARY)
</span><span class='line'>
</span><span class='line'>include $(BUILD_STATIC_LIBRARY)
</span><span class='line'>
</span><span class='line'>include $(BUILD_EXECUTABLE)</span></code></pre></td></tr></table></div></figure>


<h5>LOCAL_MODULE配置</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>LOCAL_MODULE    := module名称
</span><span class='line'>
</span><span class='line'>LOCAL_MODULE_TAGS := optional</span></code></pre></td></tr></table></div></figure>


<!--more-->


<h5>LOCAL_SRC_FILES配置</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>LOCAL_SRC_FILES := ../util.c ../hook.c ../base.c
</span></code></pre></td></tr></table></div></figure>


<h5>LOCAL_ARM_MODE配置</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>LOCAL_ARM_MODE := arm/Thumb
</span></code></pre></td></tr></table></div></figure>


<h5>LOCAL_C_INCLUDES配置</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>LOCAL_C_INCLUDES := ../util.c ../hook.c ../base.c
</span><span class='line'>
</span><span class='line'>LOCAL_C_INCLUDES += \
</span><span class='line'>     $(JNI_H_INCLUDE)\
</span><span class='line'>     /Volumes/Android/android_src_4.4.4_r2/prebuilts/ndk/9/platforms/android-14/arch-arm/usr/include</span></code></pre></td></tr></table></div></figure>


<h5>LOCAL_CFLAGS配置</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>LOCAL_SRC_FILES := ../util.c ../hook.c ../base.c
</span></code></pre></td></tr></table></div></figure>


<h5>LOCAL_LDLIBS配置</h5>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>LOCAL_LDLIBS := -L$(SYSROOT)/usr/lib -llog
</span><span class='line'>
</span><span class='line'>-L代表文件夹路径
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NDK开发常见错误（持续更新……）]]></title>
    <link href="http://jamesguo.github.io/blog/2015/07/03/ndkkai-fa-chang-jian-cuo-wu/"/>
    <updated>2015-07-03T15:00:02+08:00</updated>
    <id>http://jamesguo.github.io/blog/2015/07/03/ndkkai-fa-chang-jian-cuo-wu</id>
    <content type="html"><![CDATA[<h3>GetEnv问题</h3>

<h4>C++ 使用代码格式</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>clazz = env-&gt;FindClass(env,kClassBoa);
</span><span class='line'>int getEnvStat = vm-&gt;GetEnv((void **) &env, JNI_VERSION_1_6);</span></code></pre></td></tr></table></div></figure>


<h4>C 使用代码格式</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>clazz = (*env)-&gt;FindClass(env,kClassBoa);
</span><span class='line'>int getEnvStat = (*vm)-&gt;GetEnv(vm, (void **) &env, JNI_VERSION_1_6);</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h3>日志输出</h3>

<h4>日志定义</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;android/log.h&gt;
</span><span class='line'>#define TAG "HookBridge"
</span><span class='line'>#define JLOGD(...) __android_log_print(ANDROID_LOG_DEBUG, TAG, __VA_ARGS__)</span></code></pre></td></tr></table></div></figure>


<h3>Crash分析</h3>

<h4>日志分析&ndash;arm-linux-androideabi-addr2line</h4>

<pre><code class="``">  /toolchains/arm-linux-androideabi-4.8/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-addr2line -e /obj/local/armeabi-v7a/libhello-jni.so 00000cf4 00000d1c
</code></pre>

<h4>日志分析&ndash;arm-linux-androideabi-objdump</h4>

<pre><code class="``">  /toolchains/arm-linux-androideabi-4.8/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-objdump -S -D /obj/local/armeabi-v7a/libhello-jni.so &gt; /Desktop/dump.log
</code></pre>

<h4>日志分析&ndash;ndk-stack</h4>

<pre><code class="``">  adb logcat | ndk-stack -sym /obj/local/armeabi-v7a  
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JNI类型总结]]></title>
    <link href="http://jamesguo.github.io/blog/2015/07/03/jnilei-xing-zong-jie/"/>
    <updated>2015-07-03T11:10:44+08:00</updated>
    <id>http://jamesguo.github.io/blog/2015/07/03/jnilei-xing-zong-jie</id>
    <content type="html"><![CDATA[<p>JNI 类型映射汇总</p>

<blockquote><p>基本数据类型</p></blockquote>

<table>
<thead>
<tr>
<th>Java类型           </th>
<th style="text-align:center;"> Native类型           </th>
<th style="text-align:right;">      表述          </th>
</tr>
</thead>
<tbody>
<tr>
<td> boolean           </td>
<td style="text-align:center;"> jboolean    </td>
<td style="text-align:right;"> unsigned char (无符号8bit整型) </td>
</tr>
<tr>
<td> byte              </td>
<td style="text-align:center;"> jbyte       </td>
<td style="text-align:right;">  char (带符号8bit整型) </td>
</tr>
<tr>
<td> char              </td>
<td style="text-align:center;"> jchar       </td>
<td style="text-align:right;">    unsigned short (无符号16bit整型) </td>
</tr>
<tr>
<td> short             </td>
<td style="text-align:center;"> jshort      </td>
<td style="text-align:right;">     short (带符号16bit整型) </td>
</tr>
<tr>
<td> int               </td>
<td style="text-align:center;"> jint        </td>
<td style="text-align:right;">    int (带符号32bit整型) </td>
</tr>
<tr>
<td> long              </td>
<td style="text-align:center;"> jlong       </td>
<td style="text-align:right;">    long (带符号64bit整型) </td>
</tr>
<tr>
<td> float             </td>
<td style="text-align:center;"> jfloat      </td>
<td style="text-align:right;">    float (浮点型32bit) </td>
</tr>
<tr>
<td> double            </td>
<td style="text-align:center;"> jdouble     </td>
<td style="text-align:right;">    double (浮点型64bit) </td>
</tr>
</tbody>
</table>


<!-- more -->


<blockquote><p>引用数据类型</p></blockquote>

<table>
<thead>
<tr>
<th>Java类型           </th>
<th style="text-align:center;"> Native类型           </th>
<th style="text-align:right;">      表述          </th>
</tr>
</thead>
<tbody>
<tr>
<td> Object           </td>
<td style="text-align:center;"> jobject              </td>
<td style="text-align:right;"> 任意对象 </td>
</tr>
<tr>
<td> Class            </td>
<td style="text-align:center;"> jclass               </td>
<td style="text-align:right;"> Class类对象</td>
</tr>
<tr>
<td> String           </td>
<td style="text-align:center;"> jstring              </td>
<td style="text-align:right;"> 字符串对象 </td>
</tr>
<tr>
<td> Object[]         </td>
<td style="text-align:center;"> jobjectArray         </td>
<td style="text-align:right;"> 任何对象数组 </td>
</tr>
<tr>
<td> boolean[]        </td>
<td style="text-align:center;"> jbooleanArray        </td>
<td style="text-align:right;"> 布尔数组 </td>
</tr>
<tr>
<td> byte[]           </td>
<td style="text-align:center;"> jbyteArray           </td>
<td style="text-align:right;"> 比特数组 </td>
</tr>
<tr>
<td> char[]           </td>
<td style="text-align:center;"> jcharArray           </td>
<td style="text-align:right;"> 字符型数组 </td>
</tr>
<tr>
<td> short[]          </td>
<td style="text-align:center;"> jshortArray          </td>
<td style="text-align:right;"> 短整型数组 </td>
</tr>
<tr>
<td> int[]            </td>
<td style="text-align:center;"> jintArray            </td>
<td style="text-align:right;"> 整型数组 </td>
</tr>
<tr>
<td> long[]           </td>
<td style="text-align:center;"> jlongArray           </td>
<td style="text-align:right;"> 长整型数组 </td>
</tr>
<tr>
<td> float[]          </td>
<td style="text-align:center;"> jfloatArray          </td>
<td style="text-align:right;"> 浮点型数组 </td>
</tr>
<tr>
<td> double[]         </td>
<td style="text-align:center;"> jdoubleArray         </td>
<td style="text-align:right;"> 双浮点型数组 </td>
</tr>
<tr>
<td> void             </td>
<td style="text-align:center;"> void                </td>
<td style="text-align:right;"> N/A </td>
</tr>
</tbody>
</table>


<hr />

<h5><strong>使用注意</strong></h5>

<pre><code>1、引用数据类型则不能直接使用，需要根据JNI函数进行相应的转换后，才能使用
2、多维数组(包括二维数组)都是引用类型，需要使用 jobjectArray 类型存取其值 ；
</code></pre>

<blockquote><p>基本类型描述符</p></blockquote>

<table>
<thead>
<tr>
<th>Java类型           </th>
<th style="text-align:center;"> 域描述符   </th>
<th style="text-align:right;">      表述          </th>
</tr>
</thead>
<tbody>
<tr>
<td> boolean           </td>
<td style="text-align:center;"> Z         </td>
<td style="text-align:right;"> unsigned char (无符号8bit整型) </td>
</tr>
<tr>
<td> byte              </td>
<td style="text-align:center;"> B         </td>
<td style="text-align:right;">  char (带符号8bit整型) </td>
</tr>
<tr>
<td> char              </td>
<td style="text-align:center;"> C         </td>
<td style="text-align:right;">    unsigned short (无符号16bit整型) </td>
</tr>
<tr>
<td> short             </td>
<td style="text-align:center;"> S         </td>
<td style="text-align:right;">     short (带符号16bit整型) </td>
</tr>
<tr>
<td> int               </td>
<td style="text-align:center;"> I         </td>
<td style="text-align:right;">    int (带符号32bit整型) </td>
</tr>
<tr>
<td> long              </td>
<td style="text-align:center;"> J         </td>
<td style="text-align:right;">    long (带符号64bit整型) </td>
</tr>
<tr>
<td> float             </td>
<td style="text-align:center;"> F         </td>
<td style="text-align:right;">    float (浮点型32bit) </td>
</tr>
<tr>
<td> double            </td>
<td style="text-align:center;"> D         </td>
<td style="text-align:right;">    double (浮点型64bit) </td>
</tr>
</tbody>
</table>


<blockquote><p>引用类型描述符</p></blockquote>

<ul>
<li>一般引用类型则为( L + 该类型类描述符 + ; )</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  String类型的域描述符为 Ljava/lang/String;</span></code></pre></td></tr></table></div></figure>


<ul>
<li>对于数组，其为([ + 其类型的域描述符 + ;)</li>
</ul>


<table>
<thead>
<tr>
<th style="text-align:left;"> 类型     </th>
<th style="text-align:left;"> 描述     </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> int[ ]       </td>
<td style="text-align:left;"> [I       </td>
</tr>
<tr>
<td style="text-align:left;"> float[ ]       </td>
<td style="text-align:left;"> [F       </td>
</tr>
<tr>
<td style="text-align:left;"> String[ ]       </td>
<td style="text-align:left;"> [Ljava/lang/String;       </td>
</tr>
<tr>
<td style="text-align:left;"> Object[ ]       </td>
<td style="text-align:left;"> [Ljava/lang/Object;       </td>
</tr>
</tbody>
</table>


<ul>
<li>多维数组则是(n个[ +该类型的域描述符 N代表的是几维数组)</li>
</ul>


<table>
<thead>
<tr>
<th style="text-align:left;"> 类型     </th>
<th style="text-align:left;"> 描述     </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> int  [ ][ ]       </td>
<td style="text-align:left;"> [I       </td>
</tr>
<tr>
<td style="text-align:left;"> float  [ ][ ]       </td>
<td style="text-align:left;"> [F       </td>
</tr>
</tbody>
</table>


<blockquote><p>方法描述符</p></blockquote>

<table>
<thead>
<tr>
<th style="text-align:left;"> 类型     </th>
<th style="text-align:left;"> 描述     </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> String test ( )       </td>
<td style="text-align:left;"> Ljava/lang/String;       </td>
</tr>
<tr>
<td style="text-align:left;"> int f (int i, Object object)       </td>
<td style="text-align:left;"> (ILjava/lang/Object;)I       </td>
</tr>
<tr>
<td style="text-align:left;"> void set (byte[ ] bytes)       </td>
<td style="text-align:left;"> ([B)V       </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Native Crash收集]]></title>
    <link href="http://jamesguo.github.io/blog/2015/07/02/android-native-crashshou-ji/"/>
    <updated>2015-07-02T16:47:35+08:00</updated>
    <id>http://jamesguo.github.io/blog/2015/07/02/android-native-crashshou-ji</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开篇]]></title>
    <link href="http://jamesguo.github.io/blog/2015/07/02/kai-pian/"/>
    <updated>2015-07-02T15:19:25+08:00</updated>
    <id>http://jamesguo.github.io/blog/2015/07/02/kai-pian</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
