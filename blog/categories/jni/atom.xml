<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Jni | James Guo Blog]]></title>
  <link href="http://jamesguo.github.io/blog/categories/jni/atom.xml" rel="self"/>
  <link href="http://jamesguo.github.io/"/>
  <updated>2015-07-03T12:07:56+08:00</updated>
  <id>http://jamesguo.github.io/</id>
  <author>
    <name><![CDATA[James Guo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JNI类型总结]]></title>
    <link href="http://jamesguo.github.io/blog/2015/07/03/jnilei-xing-zong-jie/"/>
    <updated>2015-07-03T11:10:44+08:00</updated>
    <id>http://jamesguo.github.io/blog/2015/07/03/jnilei-xing-zong-jie</id>
    <content type="html"><![CDATA[<p>JNI 类型映射汇总</p>

<blockquote><p>基本数据类型</p></blockquote>

<table>
<thead>
<tr>
<th>Java类型           </th>
<th style="text-align:center;"> Native类型           </th>
<th style="text-align:right;">      表述          </th>
</tr>
</thead>
<tbody>
<tr>
<td> boolean           </td>
<td style="text-align:center;"> jboolean    </td>
<td style="text-align:right;"> unsigned char (无符号8bit整型) </td>
</tr>
<tr>
<td> byte              </td>
<td style="text-align:center;"> jbyte       </td>
<td style="text-align:right;">  char (带符号8bit整型) </td>
</tr>
<tr>
<td> char              </td>
<td style="text-align:center;"> jchar       </td>
<td style="text-align:right;">    unsigned short (无符号16bit整型) </td>
</tr>
<tr>
<td> short             </td>
<td style="text-align:center;"> jshort      </td>
<td style="text-align:right;">     short (带符号16bit整型) </td>
</tr>
<tr>
<td> int               </td>
<td style="text-align:center;"> jint        </td>
<td style="text-align:right;">    int (带符号32bit整型) </td>
</tr>
<tr>
<td> long              </td>
<td style="text-align:center;"> jlong       </td>
<td style="text-align:right;">    long (带符号64bit整型) </td>
</tr>
<tr>
<td> float             </td>
<td style="text-align:center;"> jfloat      </td>
<td style="text-align:right;">    float (浮点型32bit) </td>
</tr>
<tr>
<td> double            </td>
<td style="text-align:center;"> jdouble     </td>
<td style="text-align:right;">    double (浮点型64bit) </td>
</tr>
</tbody>
</table>


<blockquote><p>引用数据类型</p></blockquote>

<table>
<thead>
<tr>
<th>Java类型           </th>
<th style="text-align:center;"> Native类型           </th>
<th style="text-align:right;">      表述          </th>
</tr>
</thead>
<tbody>
<tr>
<td> Object           </td>
<td style="text-align:center;"> jobject              </td>
<td style="text-align:right;"> 任意对象 </td>
</tr>
<tr>
<td> Class            </td>
<td style="text-align:center;"> jclass               </td>
<td style="text-align:right;"> Class类对象</td>
</tr>
<tr>
<td> String           </td>
<td style="text-align:center;"> jstring              </td>
<td style="text-align:right;"> 字符串对象 </td>
</tr>
<tr>
<td> Object[]         </td>
<td style="text-align:center;"> jobjectArray         </td>
<td style="text-align:right;"> 任何对象数组 </td>
</tr>
<tr>
<td> boolean[]        </td>
<td style="text-align:center;"> jbooleanArray        </td>
<td style="text-align:right;"> 布尔数组 </td>
</tr>
<tr>
<td> byte[]           </td>
<td style="text-align:center;"> jbyteArray           </td>
<td style="text-align:right;"> 比特数组 </td>
</tr>
<tr>
<td> char[]           </td>
<td style="text-align:center;"> jcharArray           </td>
<td style="text-align:right;"> 字符型数组 </td>
</tr>
<tr>
<td> short[]          </td>
<td style="text-align:center;"> jshortArray          </td>
<td style="text-align:right;"> 短整型数组 </td>
</tr>
<tr>
<td> int[]            </td>
<td style="text-align:center;"> jintArray            </td>
<td style="text-align:right;"> 整型数组 </td>
</tr>
<tr>
<td> long[]           </td>
<td style="text-align:center;"> jlongArray           </td>
<td style="text-align:right;"> 长整型数组 </td>
</tr>
<tr>
<td> float[]          </td>
<td style="text-align:center;"> jfloatArray          </td>
<td style="text-align:right;"> 浮点型数组 </td>
</tr>
<tr>
<td> double[]         </td>
<td style="text-align:center;"> jdoubleArray         </td>
<td style="text-align:right;"> 双浮点型数组 </td>
</tr>
<tr>
<td> void             </td>
<td style="text-align:center;"> void                </td>
<td style="text-align:right;"> N/A </td>
</tr>
</tbody>
</table>


<hr />

<h5><strong>使用注意</strong></h5>

<pre><code>1、引用数据类型则不能直接使用，需要根据JNI函数进行相应的转换后，才能使用
2、多维数组(包括二维数组)都是引用类型，需要使用 jobjectArray 类型存取其值 ；
</code></pre>

<blockquote><p>基本类型描述符</p></blockquote>

<table>
<thead>
<tr>
<th>Java类型           </th>
<th style="text-align:center;"> 域描述符   </th>
<th style="text-align:right;">      表述          </th>
</tr>
</thead>
<tbody>
<tr>
<td> boolean           </td>
<td style="text-align:center;"> Z         </td>
<td style="text-align:right;"> unsigned char (无符号8bit整型) </td>
</tr>
<tr>
<td> byte              </td>
<td style="text-align:center;"> B         </td>
<td style="text-align:right;">  char (带符号8bit整型) </td>
</tr>
<tr>
<td> char              </td>
<td style="text-align:center;"> C         </td>
<td style="text-align:right;">    unsigned short (无符号16bit整型) </td>
</tr>
<tr>
<td> short             </td>
<td style="text-align:center;"> S         </td>
<td style="text-align:right;">     short (带符号16bit整型) </td>
</tr>
<tr>
<td> int               </td>
<td style="text-align:center;"> I         </td>
<td style="text-align:right;">    int (带符号32bit整型) </td>
</tr>
<tr>
<td> long              </td>
<td style="text-align:center;"> J         </td>
<td style="text-align:right;">    long (带符号64bit整型) </td>
</tr>
<tr>
<td> float             </td>
<td style="text-align:center;"> F         </td>
<td style="text-align:right;">    float (浮点型32bit) </td>
</tr>
<tr>
<td> double            </td>
<td style="text-align:center;"> D         </td>
<td style="text-align:right;">    double (浮点型64bit) </td>
</tr>
</tbody>
</table>


<blockquote><p>引用类型描述符</p></blockquote>

<ul>
<li><p>一般引用类型则为( L + 该类型类描述符 + ; )<br/>
<code>
String类型的域描述符为 Ljava/lang/String;
</code></p></li>
<li><p>对于数组，其为([ + 其类型的域描述符 + ;)</p></li>
</ul>


<table>
<thead>
<tr>
<th style="text-align:left;"> 类型     </th>
<th style="text-align:left;"> 描述     </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> int[ ]       </td>
<td style="text-align:left;"> [I       </td>
</tr>
<tr>
<td style="text-align:left;"> float[ ]       </td>
<td style="text-align:left;"> [F       </td>
</tr>
<tr>
<td style="text-align:left;"> String[ ]       </td>
<td style="text-align:left;"> [Ljava/lang/String;       </td>
</tr>
<tr>
<td style="text-align:left;"> Object[ ]       </td>
<td style="text-align:left;"> [Ljava/lang/Object;       </td>
</tr>
</tbody>
</table>


<ul>
<li>多维数组则是(n个[ +该类型的域描述符 N代表的是几维数组)</li>
</ul>


<table>
<thead>
<tr>
<th style="text-align:left;"> 类型     </th>
<th style="text-align:left;"> 描述     </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> int  [ ][ ]       </td>
<td style="text-align:left;"> [I       </td>
</tr>
<tr>
<td style="text-align:left;"> float  [ ][ ]       </td>
<td style="text-align:left;"> [F       </td>
</tr>
</tbody>
</table>


<blockquote><p>方法描述符</p></blockquote>

<table>
<thead>
<tr>
<th style="text-align:left;"> 类型     </th>
<th style="text-align:left;"> 描述     </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> String test ( )       </td>
<td style="text-align:left;"> Ljava/lang/String;       </td>
</tr>
<tr>
<td style="text-align:left;"> int f (int i, Object object)       </td>
<td style="text-align:left;"> (ILjava/lang/Object;)I       </td>
</tr>
<tr>
<td style="text-align:left;"> void set (byte[ ] bytes)       </td>
<td style="text-align:left;"> ([B)V       </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
</feed>
